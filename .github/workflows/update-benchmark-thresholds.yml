name: update-benchmark-thresholds
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      run_count:
        description: "Number of times to run each benchmark and update the thresholds."
        required: true
        type: number
        default: 500
      pr_number:
        description: "Pull Request number to comment on. If not provided, the workflow will not comment any PRs."
        required: false
        type: number
      target:
        description: "Regex filter for benchmark target names that contains the benchmarks to run. If not provided, all targets will be run."
        required: false
        type: string
      filter:
        description: "Regex filter for benchmark names. If not provided, all benchmarks will be run."
        required: false
        type: string
      skip:
        description: "Regex filter for benchmark names to skip. If not provided, no benchmarks will be skipped."
        required: false
        type: string

defaults:
  run:
    shell: bash --noprofile --norc -e -u -o pipefail {0}

env:
  RUN_LINK: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
  THRESHOLDS_PATH: "Benchmarks/Thresholds/"
jobs:
  update-benchmark-thresholds:
    runs-on: [self-hosted, linux, x64]

    container: swift:6.2-noble

    timeout-minutes: 1440

    permissions:
      pull-requests: write # For the comment action
      contents: write # For the committing the changes

    steps:
      - name: Install dependencies
        run: |
          apt update -q && apt install -yq libjemalloc-dev zstd jq

      - name: Construct in-progress comment
        if: ${{ inputs.pr_number != '' }}
        run: |
          echo "## [Benchmark Thresholds Update](${RUN_LINK}) Report" >> in-progress-comment.md
          echo 'Thresholds update in progress...' >> in-progress-comment.md

      - name: Comment in PR
        if: ${{ inputs.pr_number != '' }}
        uses: thollander/actions-comment-pull-request@v3
        with:
          pr-number: ${{ inputs.pr_number }}
          file-path: in-progress-comment.md
          comment-tag: benchmark-thresholds-update-comment

      - name: Check out code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure git
        run: |
          git config --global --add safe.directory "${GITHUB_WORKSPACE}"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Restore .build
        if: ${{ runner.debug != '1' }}
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: Benchmarks/.build
          key: "swiftpm-benchmark-build-${{ runner.os }}-${{ github.sha }}"
          restore-keys: "swiftpm-benchmark-build-${{ runner.os }}-"

      - name: Update benchmark thresholds
        run: |
          COMMAND="swift package -c release \
            --package-path Benchmarks \
            --allow-writing-to-package-directory \
            benchmark thresholds update \
            --path "${{ env.THRESHOLDS_PATH }}" \
            --run-count ${{ inputs.run_count }} \
            --range"

          if [[ -n '${{ inputs.target }}' ]]; then
            COMMAND="$COMMAND --target '${{ inputs.target }}'"
          fi

          if [[ -n '${{ inputs.filter }}' ]]; then
            COMMAND="$COMMAND --filter '${{ inputs.filter }}'"
          fi

          if [[ -n '${{ inputs.skip }}' ]]; then
            COMMAND="$COMMAND --skip '${{ inputs.skip }}'"
          fi

          COMMAND="$COMMAND 2>&1 | grep 'Running the command multiple times'"

          eval "$COMMAND"

      - name: Cache .build
        if: steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: Benchmarks/.build
          key: "swiftpm-benchmark-build-${{ runner.os }}-${{ github.sha }}"

      - name: Format threshold files with jq
        if: always()
        run: |
          echo "Processing threshold files..."
          for file in "${{ env.THRESHOLDS_PATH }}"/*.json; do
            echo "Processing: ${file}"
            jq '.' "${file}" > "${file}.tmp" && mv "${file}.tmp" "${file}"
          done

      - name: Check for modifications
        id: check-modifications
        if: always()
        run: |
          MODIFICATIONS="$(git status --porcelain "${{ env.THRESHOLDS_PATH }}")"
          if [ -n "$MODIFICATIONS" ]; then
            echo "has-modifications=true" >> $GITHUB_OUTPUT
            echo "changes-count=$(git status --porcelain "${{ env.THRESHOLDS_PATH }}" | awk '{print $2}' | uniq | wc -l)" >> $GITHUB_OUTPUT
          else
            echo "has-modifications=false" >> $GITHUB_OUTPUT
            echo "changes-count=0" >> $GITHUB_OUTPUT
          fi

      - name: Commit threshold changes to another branch
        if: always() && (steps.check-modifications.outputs.has-modifications == 'true')
        id: commit-update
        run: |
          CURRENT_BRANCH="${{ github.head_ref || github.ref_name }}"
          NEW_BRANCH="auto-thr-update/${CURRENT_BRANCH}"

          echo "new-branch=${NEW_BRANCH}" >> $GITHUB_OUTPUT

          git checkout -B "${NEW_BRANCH}" "origin/${CURRENT_BRANCH}"
          git add "${{ env.THRESHOLDS_PATH }}"
          git commit -m "Update of benchmark thresholds with the new baselines

          Run count: '${{ inputs.run_count }}'
          Target: '${{ inputs.target }}'
          Filter: '${{ inputs.filter }}'
          Skip: '${{ inputs.skip }}'

          Committed to ${NEW_BRANCH} by ${RUN_LINK}"

          git push -f origin "${NEW_BRANCH}"

          echo "commit-sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Construct result comment
        if: always()
        run: |
          echo "## [Benchmark Thresholds Update](${RUN_LINK}) Report" >> comment.md
          echo 'Thresholds update completed with ${{ steps.check-modifications.outputs.changes-count }} files changed.' >> comment.md

          if [[ '${{ steps.check-modifications.outputs.has-modifications }}' == 'true' ]]; then
            SHORT_SHA="$(echo '${{ steps.commit-update.outputs.commit-sha }}' | cut -c 1-7)"
            COMMIT_LINK="https://github.com/${{ github.repository }}/commit/${{ steps.commit-update.outputs.commit-sha }}"
            BRANCH_NAME="${{ steps.commit-update.outputs.new-branch }}"
            BRANCH_LINK="https://github.com/${{ github.repository }}/tree/${BRANCH_NAME}"
            echo '' >> comment.md
            echo "Pushed commit [${SHORT_SHA}](${COMMIT_LINK}) to branch [${BRANCH_NAME}](${BRANCH_LINK}) containing an update of current thresholds with the deviated baseline." >> comment.md
          fi

      - name: Update comment in PR
        if: always() && (inputs.pr_number != '')
        id: pr-comment
        uses: thollander/actions-comment-pull-request@v3
        with:
          pr-number: ${{ inputs.pr_number }}
          file-path: comment.md
          comment-tag: benchmark-thresholds-update-comment

      - name: Output the comment as job summary
        if: always()
        run: |
          cat comment.md >> "${GITHUB_STEP_SUMMARY}"
          if [[ -n '${{ inputs.pr_number }}' ]]; then
            echo 'Commented at ${{ steps.pr-comment.outputs.html-url }}' >> "${GITHUB_STEP_SUMMARY}"
          fi
